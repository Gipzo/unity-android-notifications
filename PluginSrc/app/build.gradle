apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    maven {
        url 'https://maven.google.com'

    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.1.0'
    testCompile 'junit:junit:4.12'
    compile files('libs/classes.jar')
}

task deleteOldJar(type: Delete) {
    delete 'release/simple-android-notifications/classes.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/default/classes.jar')
    into('release/simple-android-notifications/')
}

task pluginCreate(type: Zip) {
    from 'release/simple-android-notifications/'
    include '*'
    include '*/*' //to include contents of a folder present inside Reports directory
    include '*/*/*' //to include contents of a folder present inside Reports directory
    archiveName 'simple-android-notifications.aar'
    destinationDir = file('release/')
}

pluginCreate.dependsOn(deleteOldJar, build)
pluginCreate.dependsOn(exportJar, build)